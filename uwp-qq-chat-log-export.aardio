import com;
import winex;
import console;
import mouse;

var oleaut = raw.loadDll("OleAut32.DLL"); 
var oleacc = raw.loadDll("OLEACC.DLL"); 

//GUID
IID_IAccessible = '\xE0\x36\x87\x61\x3D\x3C\xCF\x11\x81\x0C\x00\xAA\x00\x38\x9B\x71';

var dumpAcc2
dumpAcc2 = function(accParent){ 
	text = ""
    //结构体数组
    var variants = { 
        struct item[] ={ 
            //动态数组,使用length指定数组长度
            length = accParent.accChildCount;
            {
                WORD vt; 
                WORD r1;
                WORD r2;
                WORD r3;
                ptr pdispVal;
                ptr r4;
            };
        }
    }
    
    var obtained = {int size};//用结构体给API提供int指针
    var hr = oleacc.AccessibleChildren(accParent, 0,accParent.accChildCount, variants,obtained);
    if( hr < 0 ) return;//COM中小于0的都是错误码

    for(i=1;obtained.size;1){
        var variant = variants.item[ i ] 
        if( variant.vt != 9/*_VT_DISPATCH*/ ) {
            oleaut.VariantClear(variant);
            continue;
        }
        var accChild = com.QueryObject( variant.pdispVal ); //转换为COM对象(COM.IDispatch)
        oleaut.VariantClear(variant);;//释放Variant对象
        try{
			text = text+accChild.accName(0)+'\n'
		 
        }
        catch(e){
       	  	if(accChild.accChildCount > 0 ){
        		text = text+ dumpAcc2(accChild)+'\n'
        	}
       }
    }
   
    return text
}



var findAccessibleChildren;
findAccessibleChildren = function(accParent,index){ 

    //结构体数组
    var variants = { 
        struct item[] ={ 
            //动态数组,使用length指定数组长度
            length = accParent.accChildCount;
            {
                WORD vt; 
                WORD r1;
                WORD r2;
                WORD r3;
                ptr pdispVal;
                ptr r4;
            };
        }
    }
    
    var obtained = {int size};//用结构体给API提供int指针
    var hr = oleacc.AccessibleChildren(accParent, 0,accParent.accChildCount, variants,obtained);
    if( hr < 0 ) return;//COM中小于0的都是错误码

   
    var variant = variants.item[index] 
    
    if( variant.vt != 9/*_VT_DISPATCH*/ ) {
        oleaut.VariantClear(variant);
        return
    }
    
    var accChild = com.QueryObject( variant.pdispVal ); //转换为COM对象(COM.IDispatch)
  
    a = 0;
    b = accChild.accRole(a)
    oleaut.VariantClear(variant);;//释放Variant对象
        
   return accChild
}

//TODO dump 直接输出index路径
//try{
//    console.log(i,accChild.accChildCount,accChild.accRole(0),accChild.accName(0))
//}catch(e){
//    console.log(i,accChild.accChildCount,accChild.accRole(0))
//}
       
//TODO 4.2.4.8 一键获取

function getQQ(){
    var qqhwnd 
	for hwnd,id in winex.each( "ApplicationFrameWindow") {
		qqhwnd = hwnd
    	break
	}

   var pvObject = {ptr p}
    if( 0 == oleacc.AccessibleObjectFromWindow(qqhwnd,0,IID_IAccessible,pvObject) ){ 
        var accParent = com.QueryObject( pvObject.p );
        var acc = findAccessibleChildren(accParent,4)
    	var acc2 = findAccessibleChildren(acc,2)
		var acc3 = findAccessibleChildren(acc2,4)
    	var acc4 = findAccessibleChildren(acc3,8)
    	
 		return acc4
    }
}

function getQQMsg(qq){
   	return dumpAcc2(qq)
}

var qq = getQQ()
var tempfile = io.open("人名-4月-聊天记录-uwpqq.log","a+")

var pageCount = 20 //聊天信息总页码数
var x = 637 //翻页按钮坐标
var y = 692 //翻页按钮坐标

for(i=1;pageCount;1){
	mouse.setPos(x,y)
	mouse.click()
	sleep(400)
	msgs = getQQMsg(qq)
	console.log(msgs)
	tempfile.write(msgs)
}

tempfile.close()
console.pause()
